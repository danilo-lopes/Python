<%
  def date_sanitizer(date, beginning_of_day)
    date = Date.parse(date)
    if beginning_of_day
      date.to_date.beginning_of_day
    else
      date.to_date.end_of_day
    end
  end
  revalidation_systems = Sistema
    .where(sid: Cliente::Requisition::Revalidation::SYSTEMS)
    .order(:nome)
    .map { |sys| { 'sid' => sys.sid, 'name' => "#{sys.nome} (#{sys.sid})" } }
  if params[:action] == 'baixar_csv'
    requisicaos_where = "r.type = 'RevalidationRequisition'"
    if params[:systems].present?
      sistemas_ids = Sistema.where(sid: params[:systems]).pluck(:id)
      sistemas_where = "AND sistemas.id IN (#{sistemas_ids.join(',')})"
    end
    if params[:status].present?
      if (Requisicao.array_tipos_status & params[:status]) == params[:status]
        requisicaos_where += " AND r.status IN (#{params[:status].to_s.gsub(/(\[|\])/,'').gsub('"',"'")})"
      end
    end
    if params[:created_at_from].present?
      created_from = date_sanitizer(params[:created_at_from], true)
      requisicaos_where += " AND r.created_at >= '#{created_from}'"
    end
    if params[:created_at_to].present?
      created_to = date_sanitizer(params[:created_at_to], false)
      requisicaos_where += " AND r.created_at <= '#{created_to}'"
    end
    if params[:updated_at_from].present?
      updated_from = date_sanitizer(params[:updated_at_from], true)
      requisicaos_where += " AND r.updated_at >= '#{updated_from}'"
    end
    if params[:updated_at_to].present?
      updated_to = date_sanitizer(params[:updated_at_to], false)
      requisicaos_where += " AND r.updated_at < '#{updated_to}'"
    end

    from_clause = <<-SQL
        SELECT DISTINCT DATA.* FROM (
        SELECT sistemas.nome AS sistema_nome,
               usuarios.login AS usuario_login,
               requisicaos.id AS requisicao_id,
               requisicaos.status AS requisicao_status,
               DATE_FORMAT(requisicaos.created_at, '%d/%m/%Y %h:%m') AS reqs_created_at,
               DATE_FORMAT(requisicaos.updated_at, '%d/%m/%Y %h:%m') AS reqs_updated_at,
               reqitems.referencia_type AS ref_type,
               CASE WHEN reqitems.referencia_type = 'Perfil'
                    THEN ''
                    ELSE sisusuarios.login END AS sisusuario_login,
               CASE WHEN reqitems.referencia_type = 'Perfil'
                    THEN perfils.nome
                    ELSE sisusuarios.login END AS ref_name,
               reqaprovacaos.status AS item_status,
               originalapprover.nome AS rule_approver_login,
               originalapprover.nome_completo AS rule_approver_nome,
               approver.nome AS approver_login,
               approver.nome_completo AS approver_nome,
               CASE WHEN reqaprovacaos.status IN ('Pendente', 'Aprovada')
                    THEN (CASE WHEN reqitems.referencia_type = 'Perfil'
                               THEN CASE WHEN originalapprover.id = approver.id
                                         THEN 'NAO' ELSE 'SIM' END
                               ELSE 'AUTOMATICA' END)
                    ELSE '' END AS approval_delegated,
               CASE WHEN reqaprovacaos.status IN ('Aprovada')
                    THEN DATE_FORMAT(reqaprovacaos.updated_at, '%d/%m/%Y %H:%i')
                    ELSE '' END AS approval_created_at
          FROM reqaprovacaos
    INNER JOIN (SELECT r.id AS id,
                       r.created_at AS created_at,
                       r.updated_at AS updated_at,
                       r.status AS status,
                       r.referencia_id AS beneficiario_id
                  FROM requisicaos AS r
                 WHERE #{requisicaos_where}
               ) AS requisicaos
            ON requisicaos.id = reqaprovacaos.requisicao_id
    INNER JOIN reqitems ON reqitems.requisicao_id = requisicaos.id
           AND reqitems.referencia_type IN ('Perfil', 'Sisusuario')
    INNER JOIN sistemas ON reqitems.sistema_id = sistemas.id
               #{sistemas_where}
     LEFT JOIN perfils ON reqitems.referencia_id = perfils.id
     LEFT JOIN sisusuarios ON sisusuarios.id = reqitems.referencia_id
     LEFT JOIN usuarios ON usuarios.id = requisicaos.beneficiario_id
     LEFT JOIN reqhists ON reqhists.requisicao_id = requisicaos.id
           AND reqhists.descricao LIKE CONCAT('Item ', perfils.nome, '%')
     LEFT JOIN users AS originalapprover ON reqaprovacaos.user_id = originalapprover.id
     LEFT JOIN users AS approver ON reqhists.user_id = approver.id
      ORDER BY requisicao_id DESC) as DATA
    SQL
    revalidations = ::ActiveRecord::Base.connection.select_rows(from_clause)
    @csv = [[
      'Sistema',
      'Login (IAM)',
      'Requisição',
      'Status Requisição',
      'Requisição Criada em',
      'Requisição Aprovada em',
      'Tipo Item',
      'Sisusuario (dado pela ordem de criação dos itens na Requisição de Revalidação)',
      'Item',
      'Status Item',
      'Login do Aprovador Original',
      'Nome do Aprovador Original',
      'Login do Aprovador do Item',
      'Nome do Aprovador do Item',
      'Aprovador Delegado',
      'Item Aprovado em'
    ]]
    revalidations.each do |revalidation|
      # Transform UTC time
      [4, 5, -1].each do |i|
        if revalidation[i].present?
          revalidation[i] = revalidation[i].to_datetime.in_time_zone().strftime("%d/%m/%Y %H:%M")
        end
      end
      @csv << revalidation
    end
  end
%>

<%= form_tag relatorio_manual_path(params[:id], action: 'baixar_csv', format: 'csv') do %>
  <p>
    <%= label_tag 'systems', 'Sistemas' %>
    <%= select_tag(
      "systems",
      options_from_collection_for_select(revalidation_systems, 'sid', 'name', params[:systems]),
      multiple: true
    ) %>
  </p>
  <p>
    <%= label_tag 'status', 'Status da Requisição' %>
    <%= select_tag(
      "status",
      options_for_select(Requisicao.array_tipos_status, params[:status]),
      multiple: true,
    ) %>
  </p>
  <p>
    <%= label_tag 'created_at_from', 'Criada em ' %>
    <%= text_field_tag('created_at_from', params[:created_at_from], placeholder: 'dd/mm/aaaa') %>
    <%= label_tag 'created_at_to', ' até ' %>
    <%= text_field_tag('created_at_to', params[:created_at_to], placeholder: 'dd/mm/aaaa') %>
  </p>
  <p>
    <%= label_tag 'updated_at_from', 'Atualizada em' %>
    <%= text_field_tag('updated_at_from', params[:updated_at_from], placeholder: 'dd/mm/aaaa') %>
    <%= label_tag 'updated_at_to', ' até ' %>
    <%= text_field_tag('updated_at_to', params[:updated_at_to], placeholder: 'dd/mm/aaaa') %>
  </p>
  <p><input name="commit" type="submit" value="Baixar CSV" /></p>
<% end %>
